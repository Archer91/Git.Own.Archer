<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAKAAAAIgAAACwAAAAsAAAALAAAACwAAAAsAAAALAAAACwAAAAsAAAALAAA
        ACwAAAAsAAAALAAAACwAAAAsAAAALAAAACwAAAAsAAAALAAAACwAAAAsAAAALAAAACwAAAAsAAAALAAA
        ACwAAAAsAAAAIgAAAAoAAAAAAAAAAFptdJxjeIDyY3iA8mN4gPJjeIDyY3iA8mN4gPJjeIDyY3iA8mN4
        gPJjeIDyY3iA8mN4gPJjeIDyY3iA8mN4gPJjeIDyY3iA8mN4gPJjeIDyY3iA8mN4gPJjeIDyY3iA8mN4
        gPJjeIDyY3iA8mN4gPJjeIDyWm10nAAAAAAAAAAAY3iA8tjl5//L3OD/y9zg/8vc4P/L3OD/y9zg/8vc
        4P/L3OD/y9zg/8vc4P/L3OD/y9zg/8vc4P/L3OD/y9zg/8vc4P/L3OD/y9zg/8vc4P/L3OD/y9zg/8vc
        4P/L3OD/y9zg/8vc4P/L3OD/y9zg/9jl5/9jeIDyAAAAAAAAAABjeIDy9fj5/+709f/n7/H/5O3v/+Tt
        7//k7e//5O3v/+Tt7//k7e//5O3v/+Tt7//k7e//5O3v/+Tt7//k7e//5O3v/+Tt7//k7e//5O3v/+Tt
        7//k7e//5O3v/+Tt7//k7e//5O3v/+fv8f/u9PX/9fj5/2N4gPIAAAAAAAAAAGN4gI5jeIDyY3iA8mN4
        gPJjeIDyY3iA8mN4gPJjeIDyY3iA8mN4gPJjeIDyY3iA8mN4gPJjeIDyY3iA8mN4gPJjeIDyY3iA8mN4
        gPJjeIDyY3iA8mN4gPJjeIDyY3h/8mN4f/JjeH/yY3iA8mN4gPJjeIDyY3iAjgAAAAAAAAAAAAAAAAAA
        AABjeIDy+vz8//j7+//4+/v/+Pv7//j7+//4+/v/+Pv7//j7+//4+/v/+Pv7//j7+//4+/v/+Pv7//j7
        +//4+/v/+Pv7//j7+//4+/v/+Pv7//j7+//4+/v/+Pv7//j7+//6/Pz/Y3iA8gAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAGN4gI5jeIDyY3iA+mN4gP9jeID/Ynd/+mN4gP9jeID/Ynd/+mN4gP9jeID/Ynd/+mN4
        gP9jeID/Ynd/+mN4gP9jeID/Ynd/+mN4gP9jeID/Ynd/+mN4gP9ofYX/Y3iA/2N4gPJjeICOAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABjeH/umqyx/8fY3f9jeIDymqyx/8fY3f9jeIDymqyx/8fY
        3f9jeIDymqyx/8fY3f9jeIDymqyx/8fY3f9jeIDymqyx/8fY3f9jeIDymqyx/8fY3f9jeIDyAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGN4gPKarLH/ydre/2N4gPKarLH/ydre/2N4
        gPKarLH/ydre/2N4gPKarLH/ydre/2N4gPKarLH/ydre/2N4gPKarLH/ydre/2N4gPKarLH/ydre/2N4
        gPIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAY3iA8pqssf/L3OD/Y3iA8pqs
        sf/L3OD/Y3iA8pqssf/L3OD/Y3iA8pqssf/L3OD/Y3iA8pqssf/L3OD/Y3iA8pqssf/L3OD/Y3iA8pqs
        sf/L3OD/Y3iA8gAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABjeIDymqyx/87e
        4v9jeIDymqyx/87e4v9jeIDymqyx/87e4v9jeIDymqyx/87e4v9jeIDymqyx/87e4v9jeIDymqyx/87e
        4v9jeIDymqyx/87e4v9jeIDyAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGN4
        gPKarLH/0eDj/2N4gPKarLH/0eDj/2N4gPKarLH/0eDj/2N4gPKarLH/0eDj/2N4gPKarLH/0eDj/2N4
        gPKarLH/0eDj/2N4gPKarLH/0eDj/2N4gPIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAY3iA8pqssf/U4ub/Y3iA8pqssf/U4ub/Y3iA8pqssf/U4ub/Y3iA8pqssf/U4ub/Y3iA8pqs
        sf/U4ub/Y3iA8pqssf/U4ub/Y3iA8pqssf/U4ub/Y3iA8gAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAABjeIDymqyx/9fk5/9jeIDymqyx/9fk5/9jeIDymqyx/9fk5/9jeIDymqyx/9fk
        5/9jeIDymqyx/9fk5/9jeIDymqyx/9fk5/9jeIDymqyx/9fk5/9jeIDyAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAGN4gPKarLH/2ufp/2N4gPKarLH/2ufp/2N4gPKarLH/2ufp/2N4
        gPKarLH/2ufp/2N4gPKarLH/2ufp/2N4gPKarLH/2ufp/2N4gPKarLH/2ufp/2N4gPIAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAY3iA8pqssf/d6ez/Y3iA8pqssf/d6ez/Y3iA8pqs
        sf/d6ez/Y3iA8pqssf/d6ez/Y3iA8pqssf/d6ez/Y3iA8pqssf/d6ez/Y3iA8pqssf/d6ez/Y3iA8gAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABjeIDymqyx/9/r7f9jeIDymqyx/9/r
        7f9jeIDymqyx/9/r7f9jeIDymqyx/9/r7f9jeIDymqyx/9/r7f9jeIDymqyx/9/r7f9jeIDymqyx/9/r
        7f9jeIDyAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGN4gPKarLH/4u3v/2N4
        gPKarLH/4u3v/2N4gPKarLH/4u3v/2N4gPKarLH/4u3v/2N4gPKarLH/4u3v/2N4gPKarLH/4u3v/2N4
        gPKarLH/4u3v/2N4gPIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACgAAACIAAAAsUWJo9H+O
        kv+8xcb/UWJo9H+Okv+8xcb/UWJo9H+Okv+8xcb/UWJo9H+Okv+8xcb/UWJo9H+Okv+8xcb/UWJo9H+O
        kv+8xcb/UWJo9H+Okv+8xcb/UWJo9AAAACwAAAAgAAAACgAAAAAAAAAAAAAAAAAAAABabXScY3iA8mN4
        gPJjeID/aX6F/2l9hf9id3//aX2F/2l9hf9id3//aX2F/2h9hP9id3//aH2E/2h9hP9id3//aH2E/2h9
        hP9id3//aH2E/2h9hP9id3//aHyE/2h9hP9jeID/Y3iA8mB1fOpZa3KOAAAAAAAAAAAAAAAAAAAAAGN4
        gPLN3OD/t83T/7TK0P+1y9H/us/V/8LU2f/F19v/xtfc/8bX3P/G19z/xtfc/8bX3P/G19z/xtfc/8bX
        3P/G19z/xtfc/8bX3P/G19z/xdfb/8LU2f+6z9X/tcvR/7TK0P+4ztP/yNfc/2J3f+YAAAAAAAAAAAAA
        AAAAAAAAY3iA8uPs7v/P3uH/w9Xa/77S1//G2Nz/1uLl/+Lr7f/q8PL/7fP0/+3z9P/t8/T/7fP0/+3z
        9P/t8/T/7fP0/+3z9P/t8/T/7fP0/+rw8v/i6+3/1eLl/8bY3P++0tf/w9Xa/8/e4f/d5uj/Y3h/5AAA
        AAAAAAAAAAAAAAAAAABhdn6Qmaet9t/m6Pzg6uz/0uDk/6a4vf94i5L/aX6F/2h9hf9ofYT/Z3yE/2d8
        hP9nfIT/Z3yE/2d8hP9nfIT/Z3yE/2d8hP9nfIT/aH2E/2h9hf94jJP/qLm+/9Lg5P/f6ez/3+Xo/Jup
        rvZhdn6CAAAAAAAAAAAAAAAAAAAAAAAAAABjeIByZ3uD8qayt/jl7O3/4Ovt/9Lg5P+ltrv/dIiP/3iI
        jP+ZqKz/scTH/7vP0/++09f/vtPX/7vP0/+vwcX/lKSo/3SEif9ziI7/pri8/9Ti5f/g6+3/5ezt/6e0
        uPhofYTyYnd/cgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABjeIAGY3iAfG2AiPKzvsL46fDx/+Lr
        7v/T4OP/orO4/3GEjP97io//pLG1/7bGyv+1xsn/oK+y/3iHjf9xhYz/pLW6/9Th5P/i6+7/6fDx/7O+
        wvhtgIjyY3iAfGN4gAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAY3iAHGN4
        gIZ0h47yv8nN+u709f/j7e//0+Dk/52utP9ugor/e4mN/3iHjP9vg4v/nq+1/9Ti5f/j7e//7PP1/7/J
        zPp0h47yY3iAhmN4gBwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAGN4gDBid3+UfY+W9M3V2Prv9fb/5e/x/9Pf4v+Yqa//m6yx/9Xi5f/l7/H/7/X2/8nS
        1fx9j5b0Ynd/lGN4gDAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABjeIBGY3h/rIuaofTZ3+L87/b3/+ny9P/p8vT/8Pb3/9bd
        4P+Gl532Ynd/pmN4gEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAY3iAWmN4f8CZp6z23OPk/OHn
        6P+Toqj4Y3h/vGN4gFgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGN4
        gF5leoHyZXqB8mN4gGYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAGN4gAJjeIACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA//////////+AAAABgAAAAYAAAAGAAAAB4AAAB+AAAAf4AAAf+AAAH/gA
        AB/4AAAf+AAAH/gAAB/4AAAf+AAAH/gAAB/4AAAf+AAAH/gAAB/AAAADwAAAA8AAAAPAAAAD8AAAD/wA
        AD/+AAB//4AB///gB///+B////5///////8=
</value>
  </data>
</root>